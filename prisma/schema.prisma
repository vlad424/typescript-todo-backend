generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  //url = env("POSTGRES_PRISMA_URL" // uses connection pooling
}

model User {
  id         Int    @id @default(autoincrement())
  email      String @unique
  login      String @unique
  first_name String
  last_name  String
  password   String
  role       String

  posts             IArrayTasks[]
  lists             ILists[]
  fingerPrint       UserFingerPrint @relation(fields: [userFingerPrintId], references: [id])
  userFingerPrintId Int
}

model IArrayTasks {
  id     Int     @id @default(autoincrement())
  name   String
  todos  ITask[]
  User   User?   @relation(fields: [userId], references: [id])
  userId Int?
}

model ITask {
  id            Int          @id @default(autoincrement())
  name          String
  desc          String
  date          String
  text_color    String
  IArrayTasks   IArrayTasks? @relation(fields: [iArrayTasksId], references: [id])
  iArrayTasksId Int?
  comment       Comment?     @relation(fields: [commentId], references: [id])
  commentId     Int?
}

model ILists {
  id        Int     @id @default(autoincrement())
  name      String
  lists     IList[]
  User      User?   @relation(fields: [userId], references: [id])
  userId    Int?
  addressee Int[]
}

model IList {
  id         Int     @id @default(autoincrement())
  name       String
  desc       String
  dateCreate String
  dateAt     String
  text_color String
  ILists     ILists? @relation(fields: [IListsId], references: [id])
  IListsId   Int?
}

model Comment {
  id      Int     @id @default(autoincrement())
  message String  @default("Нет комментария")
  todoId  Int
  ITask   ITask[]
}

model UserFingerPrint {
  id          Int    @id @default(autoincrement())
  fingerPrint String
  User        User[]
}
